name: Android release builds (prod)

on:
  push:
  pull_request:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  publish:
    name: Build and upload APK
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: "adopt"

      - name: Cache Gradle Wrapper and Dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches 
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-cache-${{ hashFiles('**/*.gradle', '**/*.gradle.kts', '**/gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-cache-${{ hashFiles('**/*.gradle', '**/*.gradle.kts', '**/gradle/wrapper/gradle-wrapper.properties') }}
            ${{ runner.os }}-gradle-cache-

      - name: Put keystore in place on filesystem to allow for signing builds
        run: echo "${{ secrets.KEYSTORE_FILE }}" | openssl base64 -d -out /tmp/keystore

      - name: Set up local.properties
        run: |
          echo -e 'signing.storeFilePath=/tmp/keystore\nsigning.keyPassword=${{ secrets.KEYSTORE_PASSWORD }}\nsigning.storePassword=${{ secrets.KEYSTORE_PASSWORD }}\nsigning.keyAlias=android' > local.properties

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Run unit tests
        run: ./gradlew --refresh-dependencies test
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}

      - name: Build AAB and APK with Gradle
        run: ./gradlew --refresh-dependencies assembleRelease
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}

      - name: Upload APK artifact to workflow
        uses: actions/upload-artifact@v3
        with:
          name: Release APK
          if-no-files-found: error
          path: ./app/build/outputs/apk/release/*.apk
